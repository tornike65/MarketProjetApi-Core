// <auto-generated />
using System;
using MarketProj.DAL.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace MarketProj.DAL.Migrations
{
    [DbContext(typeof(MarketDB))]
    partial class MarketDBModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MarketProj.Models.Models.Assets", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AssetsType")
                        .HasColumnType("int");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("Assets");

                    b.HasData(
                        new
                        {
                            Id = new Guid("60ab9937-3696-4d72-bad9-51e3d7a96f2c"),
                            AssetsType = 0,
                            ProductId = new Guid("2204b450-63ca-405e-89b6-841bd0ee1d11"),
                            Url = "https://i.ebayimg.com/images/g/RgUAAOSwatBb8s0m/s-l1600.jpg"
                        },
                        new
                        {
                            Id = new Guid("4aad7156-a52e-448a-8d75-cacff1aed5c3"),
                            AssetsType = 0,
                            ProductId = new Guid("2204b450-63ca-405e-89b6-841bd0ee1d11"),
                            Url = "https://i.ebayimg.com/images/g/op0AAOSwhnlb8s0f/s-l1600.jpg"
                        },
                        new
                        {
                            Id = new Guid("99575665-6fb0-4dc0-84c9-73bffc5e2890"),
                            AssetsType = 0,
                            ProductId = new Guid("677b49b2-4c2d-449b-b594-4ac74f579e9c"),
                            Url = "https://www.llbeanbusiness.com/static/cms-img/classic-oxford-shirts-f19.jpg"
                        },
                        new
                        {
                            Id = new Guid("b7e99648-1dd1-4112-86a0-2f1c411513a4"),
                            AssetsType = 0,
                            ProductId = new Guid("677b49b2-4c2d-449b-b594-4ac74f579e9c"),
                            Url = "https://images-na.ssl-images-amazon.com/images/I/61TWxMB8LFL._AC_UX679_.jpg"
                        },
                        new
                        {
                            Id = new Guid("89b90fbf-da31-4d13-ad2e-f19a4d283888"),
                            AssetsType = 0,
                            ProductId = new Guid("7a3fc065-6d68-4290-92a1-c08bcb99453c"),
                            Url = "https://i.ebayimg.com/images/g/fkUAAOSwG4pctJCS/s-l1600.jpg"
                        },
                        new
                        {
                            Id = new Guid("dbe6de55-16a2-48e0-9ae1-bc66e8191b0b"),
                            AssetsType = 0,
                            ProductId = new Guid("7a3fc065-6d68-4290-92a1-c08bcb99453c"),
                            Url = "https://i.ebayimg.com/images/g/fkUAAOSwG4pctJCS/s-l1600.jpg"
                        });
                });

            modelBuilder.Entity("MarketProj.Models.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Clothes")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("DiscountPercent")
                        .HasColumnType("float");

                    b.Property<double>("DiscountPrice")
                        .HasColumnType("float");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Size")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Clothes");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("677b49b2-4c2d-449b-b594-4ac74f579e9c"),
                            Clothes = 0,
                            Color = "White",
                            Date = new DateTime(2020, 6, 23, 19, 53, 16, 179, DateTimeKind.Local).AddTicks(2153),
                            DiscountPercent = 0.0,
                            DiscountPrice = 0.0,
                            Gender = 1,
                            Model = "Nike",
                            Name = "Buisnes Shirt",
                            Price = 20.0,
                            Size = "32"
                        },
                        new
                        {
                            Id = new Guid("2204b450-63ca-405e-89b6-841bd0ee1d11"),
                            Clothes = 1,
                            Color = "Black",
                            Date = new DateTime(2020, 6, 23, 19, 53, 16, 182, DateTimeKind.Local).AddTicks(7036),
                            DiscountPercent = 0.0,
                            DiscountPrice = 0.0,
                            Gender = 1,
                            Model = "Levis",
                            Name = "Buisnes Short",
                            Price = 25.0,
                            Size = "32"
                        },
                        new
                        {
                            Id = new Guid("2dd74da6-fbe0-4fe9-ba21-6414893d8b26"),
                            Clothes = 2,
                            Color = "Black",
                            Date = new DateTime(2020, 6, 23, 19, 53, 16, 182, DateTimeKind.Local).AddTicks(7309),
                            DiscountPercent = 0.0,
                            DiscountPrice = 0.0,
                            Gender = 2,
                            Model = "Adidas",
                            Name = "Sport Nice",
                            Price = 25.0,
                            Size = "32"
                        },
                        new
                        {
                            Id = new Guid("7a3fc065-6d68-4290-92a1-c08bcb99453c"),
                            Clothes = 3,
                            Color = "Blue",
                            Date = new DateTime(2020, 6, 23, 19, 53, 16, 182, DateTimeKind.Local).AddTicks(7331),
                            DiscountPercent = 0.0,
                            DiscountPrice = 0.0,
                            Gender = 2,
                            Model = "Hugo",
                            Name = "Hat",
                            Price = 12.5,
                            Size = "32"
                        },
                        new
                        {
                            Id = new Guid("05f5d799-1738-4f7c-bdba-533231a70df8"),
                            Clothes = 3,
                            Color = "Blue",
                            Date = new DateTime(2020, 6, 23, 19, 53, 16, 182, DateTimeKind.Local).AddTicks(7336),
                            DiscountPercent = 0.0,
                            DiscountPrice = 0.0,
                            Gender = 2,
                            Model = "Diamond",
                            Name = "Earrings Golden",
                            Price = 200.5,
                            Size = "32"
                        });
                });

            modelBuilder.Entity("MarketProj.Models.Models.ProductListItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainImgUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("ProductListItems");
                });

            modelBuilder.Entity("MarketProj.Models.Models.UserProducts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("UserProducts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c58f744c-2f1c-4b34-87d9-7ac10020a0e3"),
                            ProductId = new Guid("677b49b2-4c2d-449b-b594-4ac74f579e9c"),
                            UserId = new Guid("2e5e7149-2410-4997-a4b0-e634b36039a0")
                        },
                        new
                        {
                            Id = new Guid("55f90b69-3b6b-47cc-9a54-2b27be95eaae"),
                            ProductId = new Guid("2204b450-63ca-405e-89b6-841bd0ee1d11"),
                            UserId = new Guid("2e5e7149-2410-4997-a4b0-e634b36039a0")
                        },
                        new
                        {
                            Id = new Guid("d6c8d439-577c-449c-bf06-1c399aaa0c1a"),
                            ProductId = new Guid("2204b450-63ca-405e-89b6-841bd0ee1d11"),
                            UserId = new Guid("84a6eda2-2ba2-43ed-8006-b07de7403e3d")
                        });
                });

            modelBuilder.Entity("MarketProj.Models.Models.Assets", b =>
                {
                    b.HasOne("MarketProj.Models.Models.Product", "Product")
                        .WithMany("Assets")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
